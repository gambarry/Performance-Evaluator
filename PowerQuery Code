*Here is the code that generated the dataset used in this workbook. M language of Excel PowerQuery was used

let
    Source = //File source.
Folder.Files("C:\Users\Amadou Barry\OneDrive - ActionAid\2021\Documents\D4A Workshop\Data Source\Updated Data"),
    #"Removed Other Columns" = // Select Content (Binary) and Name (File name) and delete the other columns.
Table.SelectColumns(Source,{"Content", "Name"}),
    #"Added Custom" = // Add a Custom column using formula (Excel.Workbook([Content]). 
/* Add a Custom column using formula (Excel.Workbook([Content]). Content is the column containing the data. */
Table.AddColumn(#"Removed Other Columns", "Custom", each Excel.Workbook([Content])),
    #"Expanded Custom" = Table.ExpandTableColumn(#"Added Custom", "Custom", {"Name", "Data", "Item", "Kind", "Hidden"}, {"Name.1", "Data", "Item", "Kind", "Hidden"}),
    #"Removed Other Columns1" = Table.SelectColumns(#"Expanded Custom",{"Name", "Name.1", "Data"}),
    #"Inserted Text Before Delimiter" = Table.AddColumn(#"Removed Other Columns1", "Text Before Delimiter", each Text.BeforeDelimiter([Name], "."), type text),
    #"Renamed Columns" = Table.RenameColumns(#"Inserted Text Before Delimiter",{{"Text Before Delimiter", "Region"}, {"Name.1", "Period"}}),
    #"Changed Type" = Table.TransformColumnTypes(#"Renamed Columns",{{"Period", type date}}),
    #"Removed Other Columns2" = Table.SelectColumns(#"Changed Type",{"Period", "Data", "Region"}),
    #"Expanded Data" = Table.ExpandTableColumn(#"Removed Other Columns2", "Data", {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17"}, {"Column1", "Column2", "Column3", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17"}),
    #"Promoted Headers" = Table.PromoteHeaders(#"Expanded Data", [PromoteAllScalars=true]),
    #"Changed Type1" = Table.TransformColumnTypes(#"Promoted Headers",{{"01/01/2021", type date}, {"Column2", type text}, {"hepb_on_time", type text}, {"measles_1_on_time", type text}, {"old_cumulative_coverage_bcg", type text}, {"old_cumulative_coverage_dpt_1", type text}, {"old_cumulative_coverage_dpt_3", type text}, {"old_cumulative_coverage_measles_1", type text}, {"bcg_wastage", type text}, {"dpt_wastage", type text}, {"opv_wastage", type text}, {"rv_wastage", type text}, {"measles_wastage", type text}, {"Age-Inappropriate Vaccine", type text}, {"Visits With Invalid IDs", type text}, {"Visits With Incomplete Vaccine Group", type text}, {"Same Vaccines In Different Sessions", type text}, {"Incomplete Registrations", type text}, {"CRR", type text}}),
    #"Renamed Columns1" = Table.RenameColumns(#"Changed Type1",{{"01/01/2021", "Period"}, {"Column2", "Health Facility Name"}}),
    #"Filtered Rows" = Table.SelectRows(#"Renamed Columns1", each ([Health Facility Name] <> null)),
    #"Renamed Columns2" = Table.RenameColumns(#"Filtered Rows",{{"CRR", "Region"}}),
    #"Split Column by Delimiter" = Table.SplitColumn(#"Renamed Columns2", "hepb_on_time", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"hepb_on_time.1", "hepb_on_time.2"}),
    #"Changed Type2" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"hepb_on_time.1", type text}, {"hepb_on_time.2", type text}}),
    #"Removed Columns" = Table.RemoveColumns(#"Changed Type2",{"hepb_on_time.2"}),
    #"Split Column by Delimiter1" = Table.SplitColumn(#"Removed Columns", "measles_1_on_time", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"measles_1_on_time.1", "measles_1_on_time.2"}),
    #"Changed Type3" = Table.TransformColumnTypes(#"Split Column by Delimiter1",{{"measles_1_on_time.1", type text}, {"measles_1_on_time.2", type text}}),
    #"Removed Columns1" = Table.RemoveColumns(#"Changed Type3",{"measles_1_on_time.2"}),
    #"Split Column by Delimiter2" = Table.SplitColumn(#"Removed Columns1", "old_cumulative_coverage_bcg", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"old_cumulative_coverage_bcg.1", "old_cumulative_coverage_bcg.2"}),
    #"Changed Type4" = Table.TransformColumnTypes(#"Split Column by Delimiter2",{{"old_cumulative_coverage_bcg.1", type text}, {"old_cumulative_coverage_bcg.2", type text}}),
    #"Removed Columns2" = Table.RemoveColumns(#"Changed Type4",{"old_cumulative_coverage_bcg.2"}),
    #"Split Column by Delimiter3" = Table.SplitColumn(#"Removed Columns2", "old_cumulative_coverage_dpt_1", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"old_cumulative_coverage_dpt_1.1", "old_cumulative_coverage_dpt_1.2"}),
    #"Changed Type5" = Table.TransformColumnTypes(#"Split Column by Delimiter3",{{"old_cumulative_coverage_dpt_1.1", type text}, {"old_cumulative_coverage_dpt_1.2", type text}}),
    #"Removed Columns3" = Table.RemoveColumns(#"Changed Type5",{"old_cumulative_coverage_dpt_1.2"}),
    #"Split Column by Delimiter4" = Table.SplitColumn(#"Removed Columns3", "old_cumulative_coverage_dpt_3", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"old_cumulative_coverage_dpt_3.1", "old_cumulative_coverage_dpt_3.2"}),
    #"Changed Type6" = Table.TransformColumnTypes(#"Split Column by Delimiter4",{{"old_cumulative_coverage_dpt_3.1", type text}, {"old_cumulative_coverage_dpt_3.2", type text}}),
    #"Removed Columns4" = Table.RemoveColumns(#"Changed Type6",{"old_cumulative_coverage_dpt_3.2"}),
    #"Split Column by Delimiter5" = Table.SplitColumn(#"Removed Columns4", "old_cumulative_coverage_measles_1", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"old_cumulative_coverage_measles_1.1", "old_cumulative_coverage_measles_1.2"}),
    #"Changed Type7" = Table.TransformColumnTypes(#"Split Column by Delimiter5",{{"old_cumulative_coverage_measles_1.1", type text}, {"old_cumulative_coverage_measles_1.2", type text}}),
    #"Removed Columns5" = Table.RemoveColumns(#"Changed Type7",{"old_cumulative_coverage_measles_1.2"}),
    #"Split Column by Delimiter6" = Table.SplitColumn(#"Removed Columns5", "bcg_wastage", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"bcg_wastage.1", "bcg_wastage.2"}),
    #"Changed Type8" = Table.TransformColumnTypes(#"Split Column by Delimiter6",{{"bcg_wastage.1", type text}, {"bcg_wastage.2", type text}}),
    #"Removed Columns6" = Table.RemoveColumns(#"Changed Type8",{"bcg_wastage.2"}),
    #"Split Column by Delimiter7" = Table.SplitColumn(#"Removed Columns6", "dpt_wastage", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"dpt_wastage.1", "dpt_wastage.2"}),
    #"Changed Type9" = Table.TransformColumnTypes(#"Split Column by Delimiter7",{{"dpt_wastage.1", type text}, {"dpt_wastage.2", type text}}),
    #"Removed Columns7" = Table.RemoveColumns(#"Changed Type9",{"dpt_wastage.2"}),
    #"Split Column by Delimiter8" = Table.SplitColumn(#"Removed Columns7", "opv_wastage", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"opv_wastage.1", "opv_wastage.2", "opv_wastage.3", "opv_wastage.4"}),
    #"Changed Type10" = Table.TransformColumnTypes(#"Split Column by Delimiter8",{{"opv_wastage.1", type text}, {"opv_wastage.2", type text}, {"opv_wastage.3", type text}, {"opv_wastage.4", type text}}),
    #"Removed Columns8" = Table.RemoveColumns(#"Changed Type10",{"opv_wastage.2", "opv_wastage.3", "opv_wastage.4"}),
    #"Split Column by Delimiter9" = Table.SplitColumn(#"Removed Columns8", "rv_wastage", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"rv_wastage.1", "rv_wastage.2"}),
    #"Changed Type11" = Table.TransformColumnTypes(#"Split Column by Delimiter9",{{"rv_wastage.1", type text}, {"rv_wastage.2", type text}}),
    #"Removed Columns9" = Table.RemoveColumns(#"Changed Type11",{"rv_wastage.2"}),
    #"Split Column by Delimiter10" = Table.SplitColumn(#"Removed Columns9", "measles_wastage", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"measles_wastage.1", "measles_wastage.2"}),
    #"Changed Type12" = Table.TransformColumnTypes(#"Split Column by Delimiter10",{{"measles_wastage.1", type text}, {"measles_wastage.2", type text}}),
    #"Removed Columns10" = Table.RemoveColumns(#"Changed Type12",{"measles_wastage.2"}),
    #"Split Column by Delimiter11" = Table.SplitColumn(#"Removed Columns10", "Age-Inappropriate Vaccine", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"Age-Inappropriate Vaccine.1", "Age-Inappropriate Vaccine.2"}),
    #"Changed Type13" = Table.TransformColumnTypes(#"Split Column by Delimiter11",{{"Age-Inappropriate Vaccine.1", type text}, {"Age-Inappropriate Vaccine.2", type text}}),
    #"Removed Columns11" = Table.RemoveColumns(#"Changed Type13",{"Age-Inappropriate Vaccine.2"}),
    #"Split Column by Delimiter12" = Table.SplitColumn(#"Removed Columns11", "Visits With Invalid IDs", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"Visits With Invalid IDs.1", "Visits With Invalid IDs.2"}),
    #"Changed Type14" = Table.TransformColumnTypes(#"Split Column by Delimiter12",{{"Visits With Invalid IDs.1", type text}, {"Visits With Invalid IDs.2", type text}}),
    #"Removed Columns12" = Table.RemoveColumns(#"Changed Type14",{"Visits With Invalid IDs.2"}),
    #"Split Column by Delimiter13" = Table.SplitColumn(#"Removed Columns12", "Visits With Incomplete Vaccine Group", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"Visits With Incomplete Vaccine Group.1", "Visits With Incomplete Vaccine Group.2"}),
    #"Changed Type15" = Table.TransformColumnTypes(#"Split Column by Delimiter13",{{"Visits With Incomplete Vaccine Group.1", type text}, {"Visits With Incomplete Vaccine Group.2", type text}}),
    #"Removed Columns13" = Table.RemoveColumns(#"Changed Type15",{"Visits With Incomplete Vaccine Group.2"}),
    #"Split Column by Delimiter14" = Table.SplitColumn(#"Removed Columns13", "Same Vaccines In Different Sessions", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"Same Vaccines In Different Sessions.1", "Same Vaccines In Different Sessions.2"}),
    #"Changed Type16" = Table.TransformColumnTypes(#"Split Column by Delimiter14",{{"Same Vaccines In Different Sessions.1", type text}, {"Same Vaccines In Different Sessions.2", type text}}),
    #"Removed Columns14" = Table.RemoveColumns(#"Changed Type16",{"Same Vaccines In Different Sessions.2"}),
    #"Split Column by Delimiter15" = Table.SplitColumn(#"Removed Columns14", "Incomplete Registrations", Splitter.SplitTextByDelimiter("(", QuoteStyle.Csv), {"Incomplete Registrations.1", "Incomplete Registrations.2"}),
    #"Changed Type17" = Table.TransformColumnTypes(#"Split Column by Delimiter15",{{"Incomplete Registrations.1", type text}, {"Incomplete Registrations.2", type text}}),
    #"Removed Columns15" = Table.RemoveColumns(#"Changed Type17",{"Incomplete Registrations.2"}),
    #"Reordered Columns" = Table.ReorderColumns(#"Removed Columns15",{"Region", "Health Facility Name", "Period", "hepb_on_time.1", "measles_1_on_time.1", "old_cumulative_coverage_bcg.1", "old_cumulative_coverage_dpt_1.1", "old_cumulative_coverage_dpt_3.1", "old_cumulative_coverage_measles_1.1", "bcg_wastage.1", "dpt_wastage.1", "opv_wastage.1", "rv_wastage.1", "measles_wastage.1", "Age-Inappropriate Vaccine.1", "Visits With Invalid IDs.1", "Visits With Incomplete Vaccine Group.1", "Same Vaccines In Different Sessions.1", "Incomplete Registrations.1"}),
    #"Split Column by Delimiter16" = Table.SplitColumn(#"Reordered Columns", "hepb_on_time.1", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"hepb_on_time.1.1", "hepb_on_time.1.2"}),
    #"Changed Type18" = Table.TransformColumnTypes(#"Split Column by Delimiter16",{{"hepb_on_time.1.1", Int64.Type}, {"hepb_on_time.1.2", Int64.Type}}),
    #"Renamed Columns3" = Table.RenameColumns(#"Changed Type18",{{"hepb_on_time.1.1", "hepb_on_time"}, {"hepb_on_time.1.2", "hepb_on_time.total"}}),
    #"Split Column by Delimiter17" = Table.SplitColumn(#"Renamed Columns3", "measles_1_on_time.1", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"measles_1_on_time.1.1", "measles_1_on_time.1.2"}),
    #"Changed Type19" = Table.TransformColumnTypes(#"Split Column by Delimiter17",{{"measles_1_on_time.1.1", Int64.Type}, {"measles_1_on_time.1.2", Int64.Type}}),
    #"Renamed Columns4" = Table.RenameColumns(#"Changed Type19",{{"measles_1_on_time.1.1", "mr_1_on_time"}, {"measles_1_on_time.1.2", "mr_1_on_time.total"}, {"old_cumulative_coverage_bcg.1", "bcg_coverage"}}),
    #"Split Column by Delimiter18" = Table.SplitColumn(#"Renamed Columns4", "bcg_coverage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"bcg_coverage.1", "bcg_coverage.2"}),
    #"Changed Type20" = Table.TransformColumnTypes(#"Split Column by Delimiter18",{{"bcg_coverage.1", Int64.Type}, {"bcg_coverage.2", Int64.Type}}),
    #"Renamed Columns5" = Table.RenameColumns(#"Changed Type20",{{"bcg_coverage.1", "bcg_coverage"}, {"bcg_coverage.2", "bcg_coverage.total"}, {"old_cumulative_coverage_dpt_1.1", "penta_coverage"}}),
    #"Split Column by Delimiter19" = Table.SplitColumn(#"Renamed Columns5", "penta_coverage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"penta_coverage.1", "penta_coverage.2"}),
    #"Changed Type21" = Table.TransformColumnTypes(#"Split Column by Delimiter19",{{"penta_coverage.1", Int64.Type}, {"penta_coverage.2", Int64.Type}}),
    #"Renamed Columns6" = Table.RenameColumns(#"Changed Type21",{{"penta_coverage.1", "penta_1_coverage"}, {"penta_coverage.2", "penta_1_coverage.total"}, {"old_cumulative_coverage_dpt_3.1", "penta_3_coverage"}}),
    #"Split Column by Delimiter20" = Table.SplitColumn(#"Renamed Columns6", "penta_3_coverage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"penta_3_coverage.1", "penta_3_coverage.2", "penta_3_coverage.3", "penta_3_coverage.4"}),
    #"Changed Type22" = Table.TransformColumnTypes(#"Split Column by Delimiter20",{{"penta_3_coverage.1", Int64.Type}, {"penta_3_coverage.2", Int64.Type}, {"penta_3_coverage.3", type text}, {"penta_3_coverage.4", type text}}),
    #"Renamed Columns7" = Table.RenameColumns(#"Changed Type22",{{"penta_3_coverage.1", "penta_3_coverage"}, {"penta_3_coverage.2", "penta_3_coverage.total"}}),
    #"Removed Columns16" = Table.RemoveColumns(#"Renamed Columns7",{"penta_3_coverage.3", "penta_3_coverage.4"}),
    #"Renamed Columns8" = Table.RenameColumns(#"Removed Columns16",{{"old_cumulative_coverage_measles_1.1", "mr_1_coverage"}}),
    #"Split Column by Delimiter21" = Table.SplitColumn(#"Renamed Columns8", "mr_1_coverage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"mr_1_coverage.1", "mr_1_coverage.2"}),
    #"Changed Type23" = Table.TransformColumnTypes(#"Split Column by Delimiter21",{{"mr_1_coverage.1", Int64.Type}, {"mr_1_coverage.2", Int64.Type}}),
    #"Renamed Columns9" = Table.RenameColumns(#"Changed Type23",{{"mr_1_coverage.1", "mr_1_coverage"}, {"mr_1_coverage.2", "mr_1_coverage.total"}}),
    #"Split Column by Delimiter22" = Table.SplitColumn(#"Renamed Columns9", "bcg_wastage.1", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"bcg_wastage.1.1", "bcg_wastage.1.2"}),
    #"Changed Type24" = Table.TransformColumnTypes(#"Split Column by Delimiter22",{{"bcg_wastage.1.1", Int64.Type}, {"bcg_wastage.1.2", Int64.Type}}),
    #"Renamed Columns10" = Table.RenameColumns(#"Changed Type24",{{"bcg_wastage.1.1", "bcg_wastage"}, {"bcg_wastage.1.2", "bcg_wastage.total"}, {"dpt_wastage.1", "penta_wastage"}}),
    #"Split Column by Delimiter23" = Table.SplitColumn(#"Renamed Columns10", "penta_wastage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"penta_wastage.1", "penta_wastage.2", "penta_wastage.3", "penta_wastage.4"}),
    #"Changed Type25" = Table.TransformColumnTypes(#"Split Column by Delimiter23",{{"penta_wastage.1", Int64.Type}, {"penta_wastage.2", Int64.Type}, {"penta_wastage.3", type text}, {"penta_wastage.4", type text}}),
    #"Renamed Columns11" = Table.RenameColumns(#"Changed Type25",{{"penta_wastage.1", "penta_wastage"}, {"penta_wastage.2", "penta_wastage.total"}}),
    #"Removed Columns17" = Table.RemoveColumns(#"Renamed Columns11",{"penta_wastage.3", "penta_wastage.4"}),
    #"Renamed Columns12" = Table.RenameColumns(#"Removed Columns17",{{"opv_wastage.1", "opv_wastage"}}),
    #"Split Column by Delimiter24" = Table.SplitColumn(#"Renamed Columns12", "opv_wastage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"opv_wastage.1", "opv_wastage.2"}),
    #"Changed Type26" = Table.TransformColumnTypes(#"Split Column by Delimiter24",{{"opv_wastage.1", Int64.Type}, {"opv_wastage.2", Int64.Type}}),
    #"Renamed Columns13" = Table.RenameColumns(#"Changed Type26",{{"opv_wastage.1", "opv_wastage"}, {"opv_wastage.2", "opv_wastage.total"}, {"rv_wastage.1", "rv_wastage"}}),
    #"Split Column by Delimiter25" = Table.SplitColumn(#"Renamed Columns13", "rv_wastage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"rv_wastage.1", "rv_wastage.2"}),
    #"Changed Type27" = Table.TransformColumnTypes(#"Split Column by Delimiter25",{{"rv_wastage.1", Int64.Type}, {"rv_wastage.2", Int64.Type}}),
    #"Renamed Columns14" = Table.RenameColumns(#"Changed Type27",{{"rv_wastage.1", "rv_wastage"}, {"rv_wastage.2", "rv_wastage.total"}, {"measles_wastage.1", "mr_wastage"}}),
    #"Split Column by Delimiter26" = Table.SplitColumn(#"Renamed Columns14", "mr_wastage", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"mr_wastage.1", "mr_wastage.2"}),
    #"Changed Type28" = Table.TransformColumnTypes(#"Split Column by Delimiter26",{{"mr_wastage.1", Int64.Type}, {"mr_wastage.2", Int64.Type}}),
    #"Renamed Columns15" = Table.RenameColumns(#"Changed Type28",{{"mr_wastage.1", "mr_wastage"}, {"mr_wastage.2", "mr_wastage.total"}}),
    #"Split Column by Delimiter27" = Table.SplitColumn(#"Renamed Columns15", "Age-Inappropriate Vaccine.1", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"Age-Inappropriate Vaccine.1.1", "Age-Inappropriate Vaccine.1.2"}),
    #"Changed Type29" = Table.TransformColumnTypes(#"Split Column by Delimiter27",{{"Age-Inappropriate Vaccine.1.1", Int64.Type}, {"Age-Inappropriate Vaccine.1.2", Int64.Type}}),
    #"Renamed Columns16" = Table.RenameColumns(#"Changed Type29",{{"Age-Inappropriate Vaccine.1.1", "Age-Inappropriate Vaccine"}, {"Age-Inappropriate Vaccine.1.2", "Age-Inappropriate Vaccine.total"}, {"Visits With Invalid IDs.1", "Invalid IDs"}}),
    #"Split Column by Delimiter28" = Table.SplitColumn(#"Renamed Columns16", "Invalid IDs", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"Invalid IDs.1", "Invalid IDs.2", "Invalid IDs.3", "Invalid IDs.4"}),
    #"Changed Type30" = Table.TransformColumnTypes(#"Split Column by Delimiter28",{{"Invalid IDs.1", Int64.Type}, {"Invalid IDs.2", Int64.Type}, {"Invalid IDs.3", type text}, {"Invalid IDs.4", type text}}),
    #"Renamed Columns17" = Table.RenameColumns(#"Changed Type30",{{"Invalid IDs.1", "Invalid IDs"}, {"Invalid IDs.2", "Invalid IDs.total"}}),
    #"Removed Columns18" = Table.RemoveColumns(#"Renamed Columns17",{"Invalid IDs.3", "Invalid IDs.4"}),
    #"Renamed Columns18" = Table.RenameColumns(#"Removed Columns18",{{"Visits With Incomplete Vaccine Group.1", "Incomplete Vaccine Group"}}),
    #"Split Column by Delimiter29" = Table.SplitColumn(#"Renamed Columns18", "Incomplete Vaccine Group", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"Incomplete Vaccine Group.1", "Incomplete Vaccine Group.2"}),
    #"Changed Type31" = Table.TransformColumnTypes(#"Split Column by Delimiter29",{{"Incomplete Vaccine Group.1", Int64.Type}, {"Incomplete Vaccine Group.2", Int64.Type}}),
    #"Renamed Columns19" = Table.RenameColumns(#"Changed Type31",{{"Incomplete Vaccine Group.1", "Incomplete Vaccine Group"}, {"Incomplete Vaccine Group.2", "Incomplete Vaccine Group.total"}}),
    #"Split Column by Delimiter30" = Table.SplitColumn(#"Renamed Columns19", "Same Vaccines In Different Sessions.1", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"Same Vaccines In Different Sessions.1.1", "Same Vaccines In Different Sessions.1.2", "Same Vaccines In Different Sessions.1.3", "Same Vaccines In Different Sessions.1.4"}),
    #"Changed Type32" = Table.TransformColumnTypes(#"Split Column by Delimiter30",{{"Same Vaccines In Different Sessions.1.1", Int64.Type}, {"Same Vaccines In Different Sessions.1.2", Int64.Type}, {"Same Vaccines In Different Sessions.1.3", type text}, {"Same Vaccines In Different Sessions.1.4", type text}}),
    #"Renamed Columns20" = Table.RenameColumns(#"Changed Type32",{{"Same Vaccines In Different Sessions.1.1", "Same Vaccines In Different Sessions"}, {"Same Vaccines In Different Sessions.1.2", "Same Vaccines In Different Sessions.total"}}),
    #"Removed Columns19" = Table.RemoveColumns(#"Renamed Columns20",{"Same Vaccines In Different Sessions.1.3", "Same Vaccines In Different Sessions.1.4"}),
    #"Split Column by Delimiter31" = Table.SplitColumn(#"Removed Columns19", "Incomplete Registrations.1", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"Incomplete Registrations.1.1", "Incomplete Registrations.1.2"}),
    #"Changed Type33" = Table.TransformColumnTypes(#"Split Column by Delimiter31",{{"Incomplete Registrations.1.1", Int64.Type}, {"Incomplete Registrations.1.2", Int64.Type}}),
    #"Renamed Columns21" = Table.RenameColumns(#"Changed Type33",{{"Incomplete Registrations.1.1", "Incomplete Registrations"}, {"Incomplete Registrations.1.2", "Incomplete Registrations.total"}}),
    #"Added Conditional Column" = Table.AddColumn(#"Renamed Columns21", "HF Type", each if [Health Facility Name] = "Africmed" then "Private" else if [Health Facility Name] = "ASB" then "Private" else if [Health Facility Name] = "Bafrow" then "Private" else if [Health Facility Name] = "GFPA" then "Private" else if [Health Facility Name] = "Lamtoro" then "Private" else if [Health Facility Name] = "Medicare" then "Private" else if [Health Facility Name] = "Precious clinic" then "Private" else if [Health Facility Name] = "Sharab" then "Private" else if [Health Facility Name] = "Stin Clinic" then "Private" else if [Health Facility Name] = "Bijilo" then "Private" else if [Health Facility Name] = "IBN Seena" then "Private" else if [Health Facility Name] = "Mbowen" then "Private" else if [Health Facility Name] = "Pakala" then "Private" else if [Health Facility Name] = "Senela" then "Private" else if [Health Facility Name] = "SOS" then "Private" else if [Health Facility Name] = "West Field Clinic" then "Private" else if [Health Facility Name] = "MRC Keneba" then "Private" else "Public"),
    #"Reordered Columns1" = Table.ReorderColumns(#"Added Conditional Column",{"Region", "Health Facility Name", "HF Type", "Period", "hepb_on_time", "hepb_on_time.total", "mr_1_on_time", "mr_1_on_time.total", "bcg_coverage", "bcg_coverage.total", "penta_1_coverage", "penta_1_coverage.total", "penta_3_coverage", "penta_3_coverage.total", "mr_1_coverage", "mr_1_coverage.total", "bcg_wastage", "bcg_wastage.total", "penta_wastage", "penta_wastage.total", "opv_wastage", "opv_wastage.total", "rv_wastage", "rv_wastage.total", "mr_wastage", "mr_wastage.total", "Age-Inappropriate Vaccine", "Age-Inappropriate Vaccine.total", "Invalid IDs", "Invalid IDs.total", "Incomplete Vaccine Group", "Incomplete Vaccine Group.total", "Same Vaccines In Different Sessions", "Same Vaccines In Different Sessions.total", "Incomplete Registrations", "Incomplete Registrations.total"}),
    #"Added Conditional Column1" = Table.AddColumn(#"Reordered Columns1", "Country", each if [Region] = "CRR" then "Gambia" else if [Region] = "LRR" then "Gambia" else if [Region] = "NBE" then "Gambia" else if [Region] = "NBW" then "Gambia" else if [Region] = "URR" then "Gambia" else if [Region] = "WR1" then "Gambia" else if [Region] = "WR2" then "Gambia" else "NA"),
    #"Reordered Columns2" = Table.ReorderColumns(#"Added Conditional Column1",{"Country", "Region", "Health Facility Name", "HF Type", "Period", "hepb_on_time", "hepb_on_time.total", "mr_1_on_time", "mr_1_on_time.total", "bcg_coverage", "bcg_coverage.total", "penta_1_coverage", "penta_1_coverage.total", "penta_3_coverage", "penta_3_coverage.total", "mr_1_coverage", "mr_1_coverage.total", "bcg_wastage", "bcg_wastage.total", "penta_wastage", "penta_wastage.total", "opv_wastage", "opv_wastage.total", "rv_wastage", "rv_wastage.total", "mr_wastage", "mr_wastage.total", "Age-Inappropriate Vaccine", "Age-Inappropriate Vaccine.total", "Invalid IDs", "Invalid IDs.total", "Incomplete Vaccine Group", "Incomplete Vaccine Group.total", "Same Vaccines In Different Sessions", "Same Vaccines In Different Sessions.total", "Incomplete Registrations", "Incomplete Registrations.total"})
in
    #"Reordered Columns2"
